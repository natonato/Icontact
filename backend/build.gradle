plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.myapp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
    implementation 'junit:junit:4.13.1'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'


//    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


    implementation group: "com.twilio.sdk", name: "twilio", version: "8.17.0"

    implementation("io.springfox:springfox-swagger2:3.0.0")
    implementation("io.springfox:springfox-swagger-ui:3.0.0")
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'


    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.3'



}

test {
    useJUnitPlatform()
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}